#---Include required libraries---
fs = require 'fs-extra'
muffin = require 'muffin' # https://github.com/hornairs/muffin
Q = require 'q' # https://github.com/kriskowal/q
path = require 'path'

build = 'build'

#---Options---
#option '-w', '--watch', 'continue to watch the files and rebuild them when they change'
#option '-p', '--production', 'build for production (will optimize code)'
# todo: hook up the the info var to -l compile option
#option '-l', '--log', 'echo compilation logs'

task 'build', 'Build all + package', (options) ->
	muffin.run
		files: ['./style/**/*.styl', './server/coffee/**/*.coffee']
		options: options
		map:
			'./style/*/(.+?).styl$': (matches) -> compileStylus matches[0]
			'./server/coffee/(.+)?.coffee$': (matches) -> muffin.compileScript matches[0], "./server/javascript/#{matches[1]}.js", options
		before: ->
			invoke "clean"
		after: ->
			q = muffin.exec 'node ./node_modules/requirejs/bin/r.js -o build.js'
			Q.when q[1], outputResult

task 'clean', 'Remove the build directory', (options) ->
	if !!process.platform.match(/^win/)
		wrench = require 'wrench'
		wrench.rmdirSyncRecursive build, true
	else
		fs.rmrfSync build, (err) ->
			console.log err if err?.errno isnt 34

compileStylus = (source) ->
	q = muffin.exec "node ./node_modules/stylus/bin/stylus -u ./node_modules/nib/lib/nib #{source}"
	Q.when q[1], outputResult

outputResult = (result) ->
	out = result[0]
	err = result[1]
	if not err and out
		console.log out
	err
